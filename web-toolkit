(() => {
  // Evita dupla injeção
  if (window.__ftb_injected) return;
  window.__ftb_injected = true;

  const STORAGE_KEY = 'floating_toolbox.tools';

  // Exemplos iniciais (ajuste/remoção livre)
  const DEFAULT_TOOLS = [
    {
      id: (crypto.randomUUID ? crypto.randomUUID() : String(Date.now())),
      label: 'HW',
      title: 'HTML Washer',
      color: '#7C3AED',
      type: 'url', // 'url' | 'code'
      url: 'https://raw.githubusercontent.com/dudsv/nestle-tools/refs/heads/main/html-washer',
      code: ''
    },
    {
      id: (crypto.randomUUID ? crypto.randomUUID() : String(Date.now()+1)),
      label: 'EA',
      title: 'Edit-All',
      color: '#8B5CF6',
      type: 'url',
      url: 'https://raw.githubusercontent.com/dudsv/nestle-tools/refs/heads/main/edit-all',
      code: ''
    }
  ];

  // ---- storage (localStorage) ----
  const loadTools = () => {
    try {
      const raw = localStorage.getItem(STORAGE_KEY);
      if (raw) {
        const arr = JSON.parse(raw);
        if (Array.isArray(arr)) return arr;
      }
    } catch (_) {}
    return DEFAULT_TOOLS.slice();
  };
  const saveTools = (tools) => {
    try { localStorage.setItem(STORAGE_KEY, JSON.stringify(tools || [])); } catch (_) {}
  };

  // ---- UI root (Shadow DOM) ----
  const host = document.createElement('div');
  host.id = 'ftb-root';
  Object.assign(host.style, {
    position: 'fixed',
    right: '22px',
    bottom: '22px',
    zIndex: 2147483647
  });
  const shadow = host.attachShadow({ mode: 'open' });
  document.documentElement.appendChild(host);

  const css = ''
  + ':host{all:initial}'
  + '.ftb{position:relative;font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,sans-serif}'
  + '.fab{width:64px;height:64px;border:0;border-radius:9999px;cursor:pointer;background:#6D28D9;color:#fff;display:grid;place-items:center;box-shadow:0 10px 26px rgba(0,0,0,.35),0 2px 6px rgba(0,0,0,.2);outline:none;transition:transform .15s}'
  + '.fab:active{transform:scale(.98)}'
  + '.stack{position:absolute;right:10px;bottom:76px;display:flex;flex-direction:column;gap:12px;align-items:flex-end}'
  + '.stack[data-open="0"]{pointer-events:none;opacity:0;transform:translateY(8px);transition:opacity .15s,transform .15s}'
  + '.stack[data-open="1"]{pointer-events:auto;opacity:1;transform:translateY(0);transition:opacity .15s,transform .15s}'
  + '.mini{width:48px;height:48px;border-radius:9999px;border:0;color:#fff;font:700 14px/1 system-ui;cursor:pointer;display:grid;place-items:center;box-shadow:0 8px 22px rgba(0,0,0,.25),0 2px 6px rgba(0,0,0,.2)}'
  + '.mini[title]{position:relative}'
  + '.mini[title]:hover::after{content:attr(title);position:absolute;right:56px;white-space:nowrap;top:50%;transform:translateY(-50%);background:rgba(17,18,22,.92);color:#EAEAF3;border-radius:8px;padding:6px 9px;font:500 12px/1.2 system-ui}'
  + '.plus{background:#9333EA}'
  + '.overlay{position:fixed;inset:0;background:rgba(0,0,0,.45);display:grid;place-items:center}'
  // Popup 375×235 exatos
  + '.popup{width:600px;height:400px;box-sizing:border-box;max-width:none;max-height:none;background:#0f1115;color:#eaeef3;border:1px solid #23262d;border-radius:16px;box-shadow:0 16px 50px rgba(0,0,0,.55);display:grid;grid-template-rows:auto 1fr auto;overflow:hidden}'
  + '.phd{padding:12px 14px;border-bottom:1px solid #23262d;display:flex;align-items:center;gap:10px}'
  + '.phd b{font:600 14px/1.2 system-ui}'
  + '.pbd{padding:12px 14px;display:grid;gap:10px;grid-template-columns:1fr 180px;grid-template-rows:auto auto 1fr}'
  + '.pbd label{display:grid;gap:6px;font:600 12px/1.2 system-ui;color:#b7bec8}'
  + '.pbd input,.pbd textarea,.pbd select{background:#141821;border:1px solid #2a2f3a;color:#eaeef3;border-radius:10px;padding:8px 10px;font:500 13px/1.25 system-ui}'
  + '.pbd textarea{resize:none;min-height:64px;grid-column:1/span 2}'
  + '.pft{padding:10px 14px;border-top:1px solid #23262d;display:flex;justify-content:flex-end;gap:8px}'
  + '.btn{background:#23262d;color:#eaeef3;border:0;border-radius:10px;padding:8px 12px;cursor:pointer;font:600 13px/1}'
  + '.btn.primary{background:#7C3AED}';

  const style = document.createElement('style');
  style.textContent = css;
  shadow.appendChild(style);

  const html =
    '<div class="ftb" data-open="0">'
    + '<div class="stack" data-open="0" part="stack"></div>'
    + '<button class="fab" aria-label="Toolbox" title="Toolbox">'
    +   '<svg width="26" height="26" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">'
    +     '<circle cx="12" cy="12" r="10" fill="white" fill-opacity="0.18"></circle>'
    +     '<path d="M7 12h10M12 7v10" stroke="white" stroke-width="2" stroke-linecap="round"></path>'
    +   '</svg>'
    + '</button>'
    + '</div>';

  const wrap = document.createElement('div');
  wrap.innerHTML = html;
  shadow.appendChild(wrap);

  const state = { open: false, tools: loadTools() };
  const $ = (sel, root) => (root || shadow).querySelector(sel);
  const $stack = $('.stack');
  const $fab = $('.fab');

  function setOpen(v) {
    state.open = !!v;
    $stack.setAttribute('data-open', state.open ? '1' : '0');
  }

  function render() {
    $stack.innerHTML = '';

    // Botão de adicionar
    const plus = document.createElement('button');
    plus.className = 'mini plus';
    plus.title = 'Adicionar script';
    plus.textContent = '+';
    plus.addEventListener('click', openAddPopup);
    $stack.appendChild(plus);

    // Itens do usuário
    state.tools.forEach((t) => {
      const b = document.createElement('button');
      b.className = 'mini';
      b.style.background = t.color || '#8B5CF6';
      b.title = t.title || t.label || 'Script';
      b.textContent = (t.label || '??').slice(0, 2).toUpperCase();
      b.addEventListener('click', (ev) => {
        ev.preventDefault();
        if (ev.altKey || ev.metaKey) {
          // deletar
          if (confirm('Remover “‘' + (t.title || t.label) + '” ?')) {
            state.tools = state.tools.filter((x) => x.id !== t.id);
            saveTools(state.tools);
            render();
          }
          return;
        }
        runTool(t);
      });
      $stack.appendChild(b);
    });

    setOpen(state.open);
  }

  $fab.addEventListener('click', () => setOpen(!state.open));
  document.addEventListener('click', (e) => { if (!host.contains(e.target)) setOpen(false); }, { capture: true });

  // ---- Popup de adicionar ----
  function openAddPopup() {
    const overlay = document.createElement('div');
    overlay.className = 'overlay';
    overlay.innerHTML =
      '<div class="popup" role="dialog" aria-modal="true">'
      + '<div class="phd"><b>Nova Tool</b><span style="opacity:.6;font:600 12px/1;margin-left:6px">(2 letras)</span></div>'
      + '<div class="pbd">'
      +   '<label>Label (2 letras)<input id="ftb-label" maxlength="2" placeholder="HW"></label>'
      +   '<label>Cor<input id="ftb-color" type="color" value="#7C3AED"></label>'
      +   '<label>Título<input id="ftb-title" placeholder="HTML Washer"></label>'
      +   '<label>Tipo<select id="ftb-type"><option value="url" selected>URL (fetch & eval)</option><option value="code">Código inline</option></select></label>'
      +   '<label style="grid-column:1/-1">URL ou Código<textarea id="ftb-payload" placeholder="https://raw.githubusercontent.com/.../script.js"></textarea></label>'
      + '</div>'
      + '<div class="pft"><button class="btn" id="ftb-cancel">Cancelar</button><button class="btn primary" id="ftb-add">Adicionar</button></div>'
      + '</div>';

    shadow.appendChild(overlay);

    const $L = overlay.querySelector('#ftb-label');
    const $T = overlay.querySelector('#ftb-title');
    const $C = overlay.querySelector('#ftb-color');
    const $Y = overlay.querySelector('#ftb-type');
    const $P = overlay.querySelector('#ftb-payload');

    function close() { overlay.remove(); }
    overlay.querySelector('#ftb-cancel').addEventListener('click', close);
    overlay.addEventListener('click', (e) => { if (e.target === overlay) close(); });

    overlay.querySelector('#ftb-add').addEventListener('click', () => {
      const t = {
        id: (crypto.randomUUID ? crypto.randomUUID() : String(Date.now() + Math.random())),
        label: (($L.value || '??').slice(0, 2)).toUpperCase(),
        title: $T.value || $L.value || 'Tool',
        color: $C.value || '#8B5CF6',
        type: $Y.value,
        url: ($Y.value === 'url' ? ($P.value || '').trim() : ''),
        code: ($Y.value === 'code' ? $P.value : '')
      };

      if (t.type === 'url') {
        try {
          const u = new URL(t.url);
          if (u.protocol !== 'http:' && u.protocol !== 'https:') { alert('Informe uma URL http(s) válida.'); return; }
        } catch (e) { alert('Informe uma URL válida.'); return; }
      }
      if (t.type === 'code' && (!t.code || !t.code.trim())) { alert('Cole o código.'); return; }

      state.tools.unshift(t);
      saveTools(state.tools);
      render();
      close();
    });
  }

  // ---- executor ----
  function execCode(code) {
    if (!code) throw new Error('Script vazio');
    // Aceita bookmarklet "javascript:..."
    if (code.slice(0, 11).toLowerCase() === 'javascript:') {
      code = code.slice(11);
      while (code[0] === ' ' || code[0] === '\t' || code[0] === '\n') code = code.slice(1);
    }
    (0, eval)(code); // executa no contexto do content-script
  }

  function runTool(tool) {
    try {
      if (tool.type === 'url') {
        fetch(tool.url, { cache: 'no-store' })
          .then((r) => r.text())
          .then((txt) => execCode(txt))
          .catch((err) => { alert('Erro ao baixar: ' + err); });
      } else {
        execCode(tool.code || '');
      }
    } catch (err) {
      alert('Erro ao executar: ' + (err && err.message ? err.message : err));
      try { console.error('[FloatingToolbox] runTool error', err); } catch (_) {}
    }
  }

  // init
  render();
})();
